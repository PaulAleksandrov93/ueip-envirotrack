# services:
#   web-app:
#     build: 
#       context: .
#       dockerfile: Dockerfile
#     ports:
#       - "8000:8000"
#     volumes:
#       - ./envirotrack:/envirotrack
#     environment:
#       - DB_HOST=database
#       - DB_NAME=dbname
#       - DB_USER=dbuser
#       - DB_PASS=pass
#     depends_on:
#       - database

#   database:
#     image: postgres:14.6-alpine
#     environment:
#       - POSTGRES_DB=dbname
#       - POSTGRES_USER=dbuser
#       - POSTGRES_PASSWORD=pass

#   web-app-frontend:
#     build: 
#       context: ./frontend  
#       dockerfile: Dockerfile.frontend
#     ports:
#       - "3000:3000"
#     volumes:
#       - ./frontend:/app
#     depends_on:
#       - web-app 
#   redis:
#     image: redis:7.0.5-alpine
#     hostname: redis

#   worker:
#     build:
#       context: .
#     hostname: worker
#     entrypoint: celery
#     command: -A celery_app.app worker --loglevel=info
#     volumes:
#       - ./envirotrack:/envirotrack
#     links:
#       - redis
#     depends_on:
#       - redis

#   flower:
#     build: 
#       context: .
#     hostname: flower
#     entrypoint: celery
#     command: -A celery_app.app flower
#     volumes:
#       - ./envirotrack:/envirotrack
#     links:
#       - redis
#     depends_on:
#       - redis
#     ports:
#       - "5555:5555"

# ================

# version: '3.8'

# services:
#   web-app:
#     build: 
#       context: .
#       dockerfile: Dockerfile
#     ports:
#       - "8000:8000"
#     volumes:
#       - ./envirotrack:/envirotrack
#     environment:
#       - DB_ENGINE=django.db.backends.mysql
#       - DB_NAME=dbname
#       - DB_USER=dbuser
#       - DB_PASS=pass
#       - DB_HOST=database
#       - DB_PORT=3306
#     depends_on:
#       - database

#   database:
#     image: mysql:8.2
#     environment:
#       - MYSQL_DATABASE=dbname
#       - MYSQL_USER=dbuser
#       - MYSQL_PASSWORD=pass
#       - MYSQL_ROOT_PASSWORD=rootpass
#     ports:
#       - "3306:3306"

#   web-app-frontend:
#     build: 
#       context: ./envirotrack/frontend  
#       dockerfile: Dockerfile.frontend
#     ports:
#       - "3000:3000"
#     volumes:
#       - ./frontend:/app
#     depends_on:
#       - web-app 

#   redis:
#     image: redis:7.0.5-alpine
#     hostname: redis

#   worker:
#     build:
#       context: .
#     hostname: worker
#     entrypoint: celery
#     command: -A celery_app.app worker --loglevel=info
#     volumes:
#       - ./envirotrack:/envirotrack
#     links:
#       - redis
#     depends_on:
#       - redis

#   flower:
#     build: 
#       context: .
#     hostname: flower
#     entrypoint: celery
#     command: -A celery_app.app flower
#     volumes:
#       - ./envirotrack:/envirotrack
#     links:
#       - redis
#     depends_on:
#       - redis
#     ports:
#       - "5555:5555"


# version: '3.8'

# services:
#   web-app:
#     build: 
#       context: .
#       dockerfile: Dockerfile
#     ports:
#       - "8000:8000"
#     volumes:
#       - ./envirotrack:/envirotrack
#     environment:
#       - DB_ENGINE=django.db.backends.postgresql
#       - DB_NAME=dbname
#       - DB_USER=dbuser
#       - DB_PASS=pass
#       - DB_HOST=database
#       - DB_PORT=5432
#     depends_on:
#       - database
#       - worker
    
#     command: sh -c "sleep 10 && tail -f /dev/null"
#     networks:
#       - envirotrack-network

#   database:
#     image: postgres:latest
#     environment:
#       - POSTGRES_DB=dbname
#       - POSTGRES_USER=dbuser
#       - POSTGRES_PASSWORD=pass
#     ports:
#       - "5432:5432"
#     networks:
#       - envirotrack-network

#   web-app-frontend:
#     build: 
#       context: ./envirotrack/frontend  
#       dockerfile: Dockerfile.frontend
#     ports:
#       - "3000:3000"
#     volumes:
#       - ./frontend:/app
#     depends_on:
#       - web-app 

#   redis:
#     image: redis:7.0.5-alpine
#     hostname: redis

#   worker:
#     build:
#       context: .
#     command: celery -A celery_app.app worker --loglevel=info
#     volumes:
#       - ./envirotrack:/envirotrack
#     links:
#       - redis
#     depends_on:
#       - redis

# networks:
#   envirotrack-network:
#     driver: bridge


# ===

# version: '3.8'

# services:
#   web-app:
#     build: 
#       context: .
#       dockerfile: Dockerfile
#     ports:
#       - "8000:8000"
#     volumes:
#       - ./envirotrack:/envirotrack
#     environment:
#       - DB_ENGINE=django.db.backends.postgresql
#       - DB_NAME=dbname
#       - DB_USER=dbuser
#       - DB_PASS=pass
#       - DB_HOST=database
#       - DB_PORT=5432
#     depends_on:
#       - database
#     command: sh -c "python manage.py migrate && python manage.py createsuperuser --noinput --username admin --email admin@example.com && gunicorn envirotrack.wsgi:application --bind 0.0.0.0:8000 --access-logfile - --error-logfile - --log-level debug"
#     networks:
#       - envirotrack-network

#   database:
#     image: postgres:latest
#     environment:
#       - POSTGRES_DB=dbname
#       - POSTGRES_USER=dbuser
#       - POSTGRES_PASSWORD=pass
#     ports:
#       - "5432:5432"
#     networks:
#       - envirotrack-network

#   web-app-frontend:
#     build: 
#       context: ./envirotrack/frontend  
#       dockerfile: Dockerfile.frontend
#     ports:
#       - "3000:3000"
#     volumes:
#       - ./frontend:/app
#     depends_on:
#       - web-app 

#   redis:
#     image: redis:7.0.5-alpine
#     hostname: redis

#   nginx:
#     image: nginx:latest
#     ports:
#       - "80:80"
#     volumes:
#       - ./envirotrack/frontend/build:/app/frontend/build
#       - ./nginx.conf:/etc/nginx/nginx.conf
#     depends_on:
#       - web-app

# networks:
#   envirotrack-network:
#     driver: bridge


version: '3.8'

services:
  web-app:
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./envirotrack:/envirotrack
    environment:
      - DB_ENGINE=django.db.backends.postgresql
      - DB_NAME=dbname
      - DB_USER=dbuser
      - DB_PASS=pass
      - DB_HOST=database
      - DB_PORT=5432
    depends_on:
      - database
    command: sh -c "python manage.py migrate && python manage.py shell -c \"from django.contrib.auth.models import User; User.objects.filter(username='admin').exists() or User.objects.create_superuser('admin', '', 'pass')\" && gunicorn envirotrack.wsgi:application --bind 0.0.0.0:8000 --access-logfile - --error-logfile - --log-level debug"
    networks:
      - envirotrack-network

  database:
    image: postgres:latest
    environment:
      - POSTGRES_DB=dbname
      - POSTGRES_USER=dbuser
      - POSTGRES_PASSWORD=pass
    ports:
      - "5432:5432"
    networks:
      - envirotrack-network

  web-app-frontend:
    build: 
      context: ./envirotrack/frontend  
      dockerfile: Dockerfile.frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
    depends_on:
      - web-app
    networks:
      - envirotrack-network

  redis:
    image: redis:7.0.5-alpine
    hostname: redis

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./envirotrack/frontend/build:/app/frontend/build
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - web-app
    networks:
      - envirotrack-network

networks:
  envirotrack-network:
    driver: bridge